<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:vm="clr-namespace:WarehouseDeal.DesktopClient.ViewModels">

    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <Path x:Key="SaveIcon" 
          Stretch="Fill"
          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" 
          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" 
          SnapsToDevicePixels="True"
          Height="15"
          Width="15"
          Data="M1410,181h322l15,15V529a4,4,0,0,1-4,4H1399a4,4,0,0,1-4-4V196Zm75,0h175V285a4,4,0,0,1-4,4H1489a4,4,0,0,1-4-4V181Zm111,7.5h51a4,4,0,0,1,4,4v84a4,4,0,0,1-4,4h-51a4,4,0,0,1-4-4v-84A4,4,0,0,1,1596,188.5Z" />
    <Path x:Key="UpdateIcon"
          Stretch="Fill"
          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" 
          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" 
          SnapsToDevicePixels="True"
          Height="18"
          Width="17"
          Data="M1132.42,293.8A194.633,194.633,0,0,1,1155.5,386c0,107.972-87.53,195.5-195.5,195.5S764.5,493.972,764.5,386,852.028,190.5,960,190.5V132l121,101.044L960,335V274.008c-0.167,0-.333-0.008-0.5-0.008a111.5,111.5,0,1,0,98.64,59.519Z"  />
    
    <RadialGradientBrush x:Key="ButtonForeground">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="#FF006445" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="ButtonForeground2" Color="#FF004B34"/>

    <Style x:Key="TranspButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Height" Value="24"></Setter>
    </Style>
    

    <!-- CategoriesListTreeView -->
    <ControlTemplate x:Key="DataGridViewTemplate">
        <DataGrid AutoGenerateColumns="False"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"/>
    </ControlTemplate>

    <ControlTemplate x:Key="TreeViewTemplate">
        <TreeView HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch"
                  ItemsSource="{Binding CategoriesHierarchy}"
                  Name="CategoriesTreeView">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding SetSelectedItemCommand}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}} ,Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Categories}">
                    <TextBlock Text="{Binding Category.Name}" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="DimGray" />
                                <Setter Property="FontStyle" Value="Italic"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsInDeal}" Value="True">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="FontStyle" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </ControlTemplate>

    <DataTemplate x:Key="DataTemplate" >
        <Control x:Name="myControl" Template="{StaticResource DataGridViewTemplate}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsTreeView}" Value="True">
                <Setter TargetName="myControl" Property="Template" Value="{StaticResource TreeViewTemplate}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <Style x:Key="HyperlinkRemoveButton" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInDeal}" Value="true">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HyperlinkAddButton" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInDeal}" Value="true">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="TextBlock.Margin" Value="15,0,4,0"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="0,0,30,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
    </Style>


    <DataTemplate DataType="{x:Type vm:CategoryComplexityViewModel}" >
        <Grid Margin="5,0" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" 
                       Style="{StaticResource TextBlockStyle}"
                       Text="{Binding Title}" />
            <TextBox Grid.Row="0" Grid.Column="1"
                     Width="50" Height="24"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Text="{Binding Value}"/>
            <Slider Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                    Value="{Binding Value}"
                    Minimum="{Binding MinComplexity}" 
                    Maximum="{Binding MaxComplexity}"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>